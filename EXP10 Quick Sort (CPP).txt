#include <conio.h>
#include <stdlib.h>
#include <iostream.h>

void swap(int *A, int x, int y) {
    int temp;
    temp = A[x];
    A[x] = A[y];
    A[y] = temp;
}

int getPivot(int Left, int Right) {
    return ( rand() % (Right - Left + 1) ) + Left;
}

void quickSort(int *A, int Left, int Right) {
    if(Left > Right)
        return;
     
    int i, pos, pivot;
 
    // Choosing pivot element randomly:
 
    pivot = getPivot(Left, Right);  // Get a random pivot
    swap(A, Left, pivot);           // Take A[pivot] to Left index and then do Quick Sort
 
    // Quick Sort the array:
 
    pos = Left;
         
    for(i = Left+1; i <= Right; i++)
        if(A[i] < A[Left])
            swap(A, ++pos, i);
 
    swap(A, Left, pos);  // By now, pos must be at proper position for A[Left].
                         // So we swap A[Left] with A[pos]
 
    quickSort(A, Left, pos-1);     // Sort left sub-list
    quickSort(A, pos+1, Right);    // Sort right sub-list
}

void displayArray(int *A, int n) {
    for(int i = 0; i < n; i++)
        cout << A[i] << " ";
    cout << endl;
}

int main() {
    int A[] = {12, 5, 9, 7, 3, 8, 6, 1, 15, 10};
    int n = sizeof(A) / sizeof(A[0]);

    cout << "Array before sorting:" << endl;
    displayArray(A, n);

    quickSort(A, 0, n - 1);

    cout << "Array after sorting:" << endl;
    displayArray(A, n);

    getch();
    return 0;
}
